{
    "docs": [
        {
            "location": "/", 
            "text": "EconTools Documentation\n\n\nA collection of functions for economics.\n\n\n\n\nFunctions\n\n\n\n\nDataSetTools\n\n\nPlottingTools\n\n\nQuantTools", 
            "title": "Home"
        }, 
        {
            "location": "/#econtools-documentation", 
            "text": "A collection of functions for economics.", 
            "title": "EconTools Documentation"
        }, 
        {
            "location": "/#functions", 
            "text": "DataSetTools  PlottingTools  QuantTools", 
            "title": "Functions"
        }, 
        {
            "location": "/lib/DataSetTools/", 
            "text": "DataSetTools\n\n\n#\n\n\nEconTools.descriptive_stats\n \n \nFunction\n.\n\n\ndescriptive_stats(table,var::String,bycolumn::Tuple;weight=\nNone\n)\n\n\n\n\nReturns a new table containing  the mean, standard deviation, 1st, 2nd and 3rd quantiles of variable \nvar\n by a selection of tuple of columns \nbycolumns\n. Weights are optional and if specified, the function returns the weighted descriptive statistics.\n\n\nFor example \ndescriptive_stats(data,\"income\",(:age,:gender),weight=\"sampling_weights\")\n returns the descriptive statistics of income from table \ndata\n by the columns name \nage\n and \ngender\n, weighted by the sampling weights \nsampling_weights\n\n\nsource\n\n\n#\n\n\nEconTools.save_csv\n \n \nFunction\n.\n\n\nsave_csv(path::String,table::DNextTable)\n\n\n\n\nSaves table as CSV at the specified path. For example \nsave_csv(\"Folder\\data.csv\",t)\n saves the table \nt\n in the subfolder \nFolder\n under the name \ndata.csv\n\n\nsource", 
            "title": "DataSetTools"
        }, 
        {
            "location": "/lib/DataSetTools/#datasettools", 
            "text": "#  EconTools.descriptive_stats     Function .  descriptive_stats(table,var::String,bycolumn::Tuple;weight= None )  Returns a new table containing  the mean, standard deviation, 1st, 2nd and 3rd quantiles of variable  var  by a selection of tuple of columns  bycolumns . Weights are optional and if specified, the function returns the weighted descriptive statistics.  For example  descriptive_stats(data,\"income\",(:age,:gender),weight=\"sampling_weights\")  returns the descriptive statistics of income from table  data  by the columns name  age  and  gender , weighted by the sampling weights  sampling_weights  source  #  EconTools.save_csv     Function .  save_csv(path::String,table::DNextTable)  Saves table as CSV at the specified path. For example  save_csv(\"Folder\\data.csv\",t)  saves the table  t  in the subfolder  Folder  under the name  data.csv  source", 
            "title": "DataSetTools"
        }, 
        {
            "location": "/lib/PlottingTools/", 
            "text": "PlottingTools\n\n\nscatterplot\npgfplots_scatter", 
            "title": "PlottingTools"
        }, 
        {
            "location": "/lib/PlottingTools/#plottingtools", 
            "text": "scatterplot\npgfplots_scatter", 
            "title": "PlottingTools"
        }, 
        {
            "location": "/lib/QuantTools/", 
            "text": "QuantTools\n\n\n#\n\n\nEconTools.tauchen\n \n \nFunction\n.\n\n\ntauchen(N::Integer=18, \u03c1::Real=0.96, \u03c3::Real=0.045, \u03bc::Real=0.0, n_std::Integer=4)\n\n\n\n\nTauchen's (1996) method for approximating AR(1) process with a finite markov chain\n\n\n\n\n\n    y_t = \\mu + \\rho y_{t-1} + \\epsilon_t\n\n\n\n\n\nwhere $\\epsilon_t \\sim N (0, \\sigma^2)$\n\n\nArguments\n\n\n\n\nN::Integer\n: Number of points in markov process\n\n\n\u03c1::Real\n : Persistence parameter in AR(1) process\n\n\n\u03c3::Real\n : Standard deviation of random component of AR(1) process\n\n\n\u03bc::Real(0.0)\n : Mean of AR(1) process\n\n\nn_std::Integer(4)\n : The number of standard deviations to each side the process should span\n\n\n\n\nReturns\n\n\n\n\ngrid, \u03a0, \u03a0_cdf\n : The grid, the transition matrix and CDF of transition matrix\n\n\n\n\nNotes\n\n\n\n\nThis function has been modified by QuantEcon.jl\n\n\n\n\nsource\n\n\n#\n\n\nEconTools.expspace\n \n \nFunction\n.\n\n\nexpspace(x_min::Float64, x_max::Float64)::Array{Float64}, x_scale::Float64,n_x::Int64)\n\n\n\n\nThis generates a vector of length n_x between x_min and x_max, where the spacing is controlled by x_scale.  When x_scale == 1, this is equivalent to linspace.  When x_scale \n 1, the points are closer together near x_min.  When 0 \n x_scale \n 1, the points are closer together near x_max.\n\n\nsource", 
            "title": "QuantTools"
        }, 
        {
            "location": "/lib/QuantTools/#quanttools", 
            "text": "#  EconTools.tauchen     Function .  tauchen(N::Integer=18, \u03c1::Real=0.96, \u03c3::Real=0.045, \u03bc::Real=0.0, n_std::Integer=4)  Tauchen's (1996) method for approximating AR(1) process with a finite markov chain   \n    y_t = \\mu + \\rho y_{t-1} + \\epsilon_t   where $\\epsilon_t \\sim N (0, \\sigma^2)$  Arguments   N::Integer : Number of points in markov process  \u03c1::Real  : Persistence parameter in AR(1) process  \u03c3::Real  : Standard deviation of random component of AR(1) process  \u03bc::Real(0.0)  : Mean of AR(1) process  n_std::Integer(4)  : The number of standard deviations to each side the process should span   Returns   grid, \u03a0, \u03a0_cdf  : The grid, the transition matrix and CDF of transition matrix   Notes   This function has been modified by QuantEcon.jl   source  #  EconTools.expspace     Function .  expspace(x_min::Float64, x_max::Float64)::Array{Float64}, x_scale::Float64,n_x::Int64)  This generates a vector of length n_x between x_min and x_max, where the spacing is controlled by x_scale.  When x_scale == 1, this is equivalent to linspace.  When x_scale   1, the points are closer together near x_min.  When 0   x_scale   1, the points are closer together near x_max.  source", 
            "title": "QuantTools"
        }, 
        {
            "location": "/lib/", 
            "text": "Index\n\n\n\n\nEconTools.descriptive_stats\n\n\nEconTools.expspace\n\n\nEconTools.save_csv\n\n\nEconTools.scatterplot\n\n\nEconTools.tauchen", 
            "title": "Index"
        }, 
        {
            "location": "/lib/#index", 
            "text": "EconTools.descriptive_stats  EconTools.expspace  EconTools.save_csv  EconTools.scatterplot  EconTools.tauchen", 
            "title": "Index"
        }
    ]
}